#! /bin/sh

curl -L https://sourcegraph.com/.api/src-cli/src_linux_amd64 -o src
chmod +x src

src search -json "context:global /import\s+aim|from\s+aim.* import / count:all select:repo case:yes" > "Aim.json"                                                                                                                                                                                                                                                                                                                                                                                                                                                  # Aim
src search -json "context:global /import\s+sagemaker|from\s+sagemaker.* import |#include <aws\/sagemaker.*\.h>|\"github\.com\/aws\/aws-sdk-go\/service\/sagemaker\"|package com\.amazonaws\.services\.sagemaker.*;|using Amazon\.SageMaker.*;|namespace Aws\\SageMaker\.*;|import .+ from\s+(\"@aws-sdk\/client-sagemaker\"|'@aws-sdk\/client-sagemaker');|require\((\"@aws-sdk\/client-sagemaker\"|'@aws-sdk\/client-sagemaker')\);|require_relative ('aws-sdk-sagemaker\/.*'|\"aws-sdk-sagemaker\/.*\")/ select:repo count:all case:yes" > "Amazon SageMaker.json" # Amazon SageMaker
src search -json "context:global /import\s+azureml\.core|from\s+azureml\.core.* import / count:all select:repo case:yes" > "Azure Machine Learning.json"                                                                                                                                                                                                                                                                                                                                                                                                           # Azure Machine Learning
src search -json "context:global file:clearml\.conf or /import\s+clearml|from\s+clearml.* import / count:all select:repo case:yes" > "ClearML.json"                                                                                                                                                                                                                                                                                                                                                                                                                # ClearML
src search -json "context:global /import\s+cnvrgv2|from\s+cnvrgv2 import / count:all select:repo case:yes" > "cnvrg.io.json"                                                                                                                                                                                                                                                                                                                                                                                                                                       # cnvrg.io
src search -json "context:global /import\s+codalab|from\s+codalab.* import / count:all select:repo case:yes" > "Codalab.json"                                                                                                                                                                                                                                                                                                                                                                                                                                      # Codalab
src search -json "context:global /import\s+comet_m(l|pm)|from\s+comet_m(l|pm).* import |import\s+ml\.comet\.experiment.*;|library\(cometr\)/ count:all select:repo case:yes" > "Comet.json"                                                                                                                                                                                                                                                                                                                                                                          # Comet
src search -json "context:global /import\s+determined|from\s+determined.* import / count:all select:repo case:yes" > "Determined.json"                                                                                                                                                                                                                                                                                                                                                                                                                             # Determined
src search -json "context:global file:domino\.y(a)?ml or /import\s+domino|from\s+domino.* import |library\(domino\)/ count:all select:repo case:yes" > "Domino.json"                                                                                                                                                                                                                                                                                                                                                                                               # Domino
src search -json "context:global file:dvc\.y(a)?ml or /import\s+dvc|from\s+dvc.* import / count:all select:repo case:yes" > "DVC.json"                                                                                                                                                                                                                                                                                                                                                                                                                             # DVC
src search -json "context:global file:guild\.y(a)?ml or /import\s+guild|from\s+guild.* import / count:all select:repo case:yes" > "Guild AI.json"                                                                                                                                                                                                                                                                                                                                                                                                                  # Guild AI
src search -json "context:global /import\s+mlflow|from\s+mlflow.* import |library\(mlflow\)|import\s+org\.mlflow.*;/ count:all select:repo case:yes" > "MLflow.json"                                                                                                                                                                                                                                                                                                                                                                                                 # MLflow
src search -json "context:global /import\s+verta|from\s+verta.* import / count:all select:repo case:yes" > "Verta.json"                                                                                                                                                                                                                                                                                                                                                                                                                                            # Verta
src search -json "context:global /import\s+neptune|from\s+neptune.* import |library\(neptune\)/ count:all select:repo case:yes" > "Neptune.json"                                                                                                                                                                                                                                                                                                                                                                                                                   # Neptune
src search -json "context:global /import\s+optuna|from\s+optuna.* import / count:all select:repo case:yes" > "Optuna.json"                                                                                                                                                                                                                                                                                                                                                                                                                                         # Optuna
src search -json "context:global /import\s+polyaxon|from\s+polyaxon.* import |\"github\.com\/polyaxon\/sdks\/go\/http_client\/v1\/.*\"|require\(('polyaxon-sdk'|\"polyaxon-sdk\")\);|require\(('@polyaxon\/sdk@1\.20\.0'|\"@polyaxon\/sdk@1\.20\.0\")\);|import .+ from\s+('polyaxon-sdk'|\"polyaxon-sdk\");|import .+ from\s+('@polyaxon\/sdk@1\.20\.0'|\"@polyaxon\/sdk@1\.20\.0\");/ count:all select:repo case:yes" > "Polyaxon.json"                                                                                                                              # Polyaxon
src search -json "context:global /import\s+sacred|from\s+sacred.* import / count:all select:repo case:yes" > "Sacred.json"                                                                                                                                                                                                                                                                                                                                                                                                                                         # Sacred
src search -json "context:global /import\s+sigopt|from\s+sigopt.* import |library\(SigOptR\)|import\s+com\.sigopt.*;/ count:all select:repo case:yes" > "SigOpt.json"                                                                                                                                                                                                                                                                                                                                                                                                # SigOpt
src search -json "context:global file:valohai\.y(a)?ml or /import\s+valohai_yaml|from\s+valohai_yaml.* import / count:all select:repo case:yes" > "Valohai.json"                                                                                                                                                                                                                                                                                                                                                                                                   # Valohai
src search -json "context:global /import\s+google\.cloud\.aiplatform|from\s+google\.cloud import aiplatform|import\s+com\.google\.cloud\.aiplatform.*;|require\((\"@google-cloud\/aiplatform\"|'@google-cloud\/aiplatform')\);|import .+ from\s+(\"@google-cloud\/aiplatform\"|'@google-cloud\/aiplatform');/ count:all select:repo case:yes" > "Vertex AI.json"                                                                                                                                                                                                       # Vertex AI
src search -json "context:global /import\s+wandb|from\s+wandb.* import |import\s+com\.wandb.*;/ count:all select:repo case:yes" > "Weights & Biases.json"                                                                                                                                                                                                                                                                                                                                                                                                            # Weights & Biases
